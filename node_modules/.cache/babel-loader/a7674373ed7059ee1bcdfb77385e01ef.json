{"ast":null,"code":"var _jsxFileName = \"/Users/bill/Downloads/likeweather2-main/src/Components/update-comp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport pImg from '../assets/pressure.jpeg';\nimport cldImg from '../assets/cloud-2.jpeg';\nimport windImg from '../assets/wind.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"ced22aec0279af79fab812e8bc8f3312\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction WeatherUpdate() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [message, setMessage] = useState(\"\");\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metrics&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setQuery(\"\");\n        setWeather(result);\n        console.log(result);\n      }).catch(error => {\n        setMessage(error);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search....\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"updateError\",\n          style: {\n            fontSize: \"20px\",\n            color: \"red\"\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp - 273.15), \"\\u02DAC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weatherDesc\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cldImg,\n                  width: \"90\",\n                  height: \"90\",\n                  className: \"img\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontStyle: \"italic\",\n                    fontFamily: \"Sofia, sans-serif\"\n                  },\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), weather.weather[0].description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind-speed\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: windImg,\n                  width: \"90\",\n                  height: \"90\",\n                  className: \"img\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontStyle: \"italic\",\n                    fontFamily: \"Sofia, sans-serif\"\n                  },\n                  children: \"Wind Speed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), weather.wind.speed, \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pressure\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {},\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: pImg,\n                  width: \"90\",\n                  height: \"90\",\n                  className: \"img\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontStyle: \"italic\",\n                    fontFamily: \"Sofia, sans-serif\"\n                  },\n                  children: \"Pressure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), weather.main.pressure, \" hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(WeatherUpdate, \"1xzppIt67G/YpE2tnbqTRztdYaI=\");\n\n_c = WeatherUpdate;\nexport default WeatherUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherUpdate\");","map":{"version":3,"sources":["/Users/bill/Downloads/likeweather2-main/src/Components/update-comp.js"],"names":["React","useState","pImg","cldImg","windImg","api","key","base","WeatherUpdate","query","setQuery","weather","setWeather","message","setMessage","search","evt","fetch","then","res","json","result","console","log","catch","error","dateBuilder","d","days","months","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","fontSize","color","name","sys","country","Date","Math","round","fontStyle","fontFamily","description","wind","speed","pressure"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport pImg from '../assets/pressure.jpeg';\nimport cldImg from '../assets/cloud-2.jpeg';\nimport windImg from '../assets/wind.jpeg';\n\n\n\nconst api = {\n    key: \"ced22aec0279af79fab812e8bc8f3312\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  }\n  \n  function WeatherUpdate() {\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n    const [message, setMessage] = useState(\"\");\n  \n  \n    const search = evt =>{\n      if(evt.key === \"Enter\"){\n        fetch(`${api.base}weather?q=${query}&units=metrics&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        })\n        .catch(error=>{\n          setMessage(error)\n        })\n      }\n    }\n  \n  \n    const dateBuilder = (d) => {\n      let days = [\"Sunday\",\"Monday\",\n      \"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\", \"Saturday\"];\n      let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n      \"August\",\"September\",\"October\",\"November\",\"December\"];\n  \n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n  \n      return `${day} ${date} ${month} ${year}`;\n    }\n    return (\n      <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n        <main>\n          <div className='search-box'>\n            <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder='Search....'\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}/>\n          </div><br/><br/>\n          {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <h1 className=\"updateError\" style={{fontSize:\"20px\", color:\"red\"}}>{message}</h1>\n            <div className='location-box'>\n              <div className='location'>{weather.name}, {weather.sys.country}</div>\n              <div className='date'>{dateBuilder(new Date())}</div>\n            </div>\n              <br/><br/>\n            <div className='weather-box'>\n              <div className='temp'>{Math.round(weather.main.temp - 273.15)}˚C</div>\n              <div className='weather'>{weather.weather[0].main}</div>\n              <div className=\"info-box\">\n                <div className=\"weatherDesc\">\n                  <h2><img src={cldImg} width=\"90\" height=\"90\" className='img' alt=\"\"/>\n                  <p style={{fontStyle:\"italic\", fontFamily:\"Sofia, sans-serif\"}}>Description</p>\n                  {weather.weather[0].description}</h2>\n                </div><br/>\n                <div className='wind-speed'>\n                  <h2><img src={windImg} width=\"90\" height=\"90\" className='img' alt=\"\"/>\n                  <p style={{fontStyle:\"italic\", fontFamily:\"Sofia, sans-serif\"}}>Wind Speed</p>\n                  {weather.wind.speed} m/s</h2>\n                </div><br/>\n                <div className=\"pressure\">\n                  <h2 style={{}}><img src={pImg} width=\"90\" height=\"90\" className='img' alt=\"\"/>\n                  <p style={{fontStyle:\"italic\", fontFamily:\"Sofia, sans-serif\"}}>Pressure</p>\n                  {weather.main.pressure} hPa</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n           ) : (\"\")}\n        </main>\n      </div>\n    );\n  }\n  \n  export default WeatherUpdate;"]},"metadata":{},"sourceType":"module"}